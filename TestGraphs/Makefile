# Makefile found at https://gist.github.com/maxtruxa/4b3929e118914ccef057f8a05c614b0f
# and modified to automatically find srcs

# output binary
BIN := TestGraphs
BIN_TEST := .GraphGenTests

# source files
SRCS := $(wildcard $/src/*.cpp) $(wildcard $/src/**/*.cpp)
TESTS := $(wildcard $/tests/*.cpp) $(wildcard $/tests/**/*.cpp)

# files included in the tarball generated by 'make dist' (e.g. add LICENSE file)
DISTFILES := $(BIN)

# filename of the tar archive generated by 'make dist'
DISTOUTPUT := $(BIN).tar.gz

# intermediate directory for generated object files
OBJDIR := .o
# intermediate directory for generated dependency files
DEPDIR := .d

# object files, auto generated from source files
OBJS := $(patsubst %,$(OBJDIR)/%.o,$(basename $(SRCS)))
# dependency files, auto generated from source files
DEPS := $(patsubst %,$(DEPDIR)/%.d,$(basename $(SRCS)))
# tests objs and dependancies
TESTSOBJS := $(patsubst %,$(OBJDIR)/%.o,$(basename $(TESTS)))
TESTSDEPS := $(patsubst %,$(DEPDIR)/%.d,$(basename $(TESTS)))

# C compiler
CC := gcc

# C++ compiler
CXX := g++

# linker
LD := g++

# tar
TAR := tar

# C flags
CFLAGS := -std=c11
# C++ flags
CXXFLAGS := -std=c++1z
# C/C++ flags
CPPFLAGS := -g -Wall -Wextra -pedantic -I src -O2
# linker flags
LDFLAGS := -g
# flags required for dependency generation; passed to compilers
DEPFLAGS = -MT $@ -MD -MP -MF $(DEPDIR)/$*.d

# compile C source files
COMPILE.c = $(CC) $(DEPFLAGS) $(CFLAGS) $(CPPFLAGS) -c -o $@
# compile C++ source files
COMPILE.cc = $(CXX) $(DEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) -c -o $@
# link object files to binary
LINK.o = $(LD) $(LDFLAGS) $(LDLIBS) -o $@
# precompile step
PRECOMPILE =
# postcompile step
POSTCOMPILE = @touch

# mv -f $(DEPDIR)/$*.Td $(DEPDIR)/$*.d

$(shell mkdir -p $(dir $(OBJS)) >/dev/null)
$(shell mkdir -p $(dir $(DEPS)) >/dev/null)
$(shell mkdir -p $(dir $(TESTSOBJS)) >/dev/null)
$(shell mkdir -p $(dir $(TESTSDEPS)) >/dev/null)

all: $(BIN)

dist: $(DISTFILES)
	$(TAR) -cvzf $(DISTOUTPUT) $^

.PHONY: clean
clean:
	$(RM) -r $(OBJDIR) $(DEPDIR)

.PHONY: distclean
distclean: clean
	$(RM) $(BIN) $(DISTOUTPUT)

.PHONY: install
install:
	@echo no install tasks configured

.PHONY: uninstall
uninstall:
	@echo no uninstall tasks configured

.PHONY: test
test: $(BIN_TEST)
	./$(BIN_TEST)

.PHONY: remake
remake: clean create_dir all

# compilers (at least gcc and clang) don't create the subdirectories automatically
.PHONY: create_dir
create_dir:
	$(shell mkdir -p $(dir $(OBJS)) >/dev/null)
	$(shell mkdir -p $(dir $(DEPS)) >/dev/null)
	$(shell mkdir -p $(dir $(TESTSOBJS)) >/dev/null)
	$(shell mkdir -p $(dir $(TESTSDEPS)) >/dev/null)

.PHONY: help
help:
	@echo available targets: all dist clean distclean install uninstall check remake

$(BIN): $(OBJS)
	$(LINK.o) $^

$(BIN_TEST): $(filter-out .o/src/main.o, $(OBJS)) $(TESTSOBJS)
	$(LINK.o) $^

$(OBJDIR)/%.o: %.c
$(OBJDIR)/%.o: %.c $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.c) $<
	$(POSTCOMPILE) $@

$(OBJDIR)/%.o: %.cpp
$(OBJDIR)/%.o: %.cpp $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.cc) $<
	$(POSTCOMPILE) $@

$(OBJDIR)/%.o: %.cc
$(OBJDIR)/%.o: %.cc $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.cc) $<
	$(POSTCOMPILE) $@

$(OBJDIR)/%.o: %.cxx
$(OBJDIR)/%.o: %.cxx $(DEPDIR)/%.d
	$(PRECOMPILE)
	$(COMPILE.cc) $<
	$(POSTCOMPILE) $@

.PRECIOUS = $(DEPDIR)/%.d
$(DEPDIR)/%.d: ;

-include $(DEPS) $(TESTSDEPS)
